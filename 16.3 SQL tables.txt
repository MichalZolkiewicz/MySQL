CREATE TABLE ISSUELISTS
(
ID SERIAL PRIMARY KEY,
NAME VARCHAR(100)
);

CREATE TABLE ISSUES
(
ID SERIAL PRIMARY KEY,
ISSUELIST_ID BIGINT UNSIGNED NOT NULL,
SUMMARY VARCHAR(100),
DESCTRIPTION VARCHAR(1024),
USER_ID_ASSIGNEDTO BIGINT UNSIGNED NOT NULL,
FOREIGN KEY (ISSUELIST_ID) REFERENCES ISSUELISTS(ID),
FOREIGN KEY (USER_ID_ASSIGNEDTO) REFERENCES USERS(ID)
);

INSERT INTO ISSUELISTS (NAME)
VALUES ("ToDo");

INSERT INTO ISSUELISTS (NAME)
VALUES ("In progress");

INSERT INTO ISSUELISTS (NAME)
VALUES ("Done");

COMMIT;

INSERT INTO ISSUES(ISSUELIST_ID, SUMMARY, DESCTRIPTION, USER_ID_ASSIGNEDTO) 
VALUES(3, "Task 5", "Get paid", 4);

INSERT INTO ISSUES(ISSUELIST_ID, SUMMARY, DESCTRIPTION, USER_ID_ASSIGNEDTO) 
VALUES(1, "Task 1", "Write code", 2);

INSERT INTO ISSUES(ISSUELIST_ID, SUMMARY, DESCTRIPTION, USER_ID_ASSIGNEDTO) 
VALUES(1, "Task 2", "Write more code", 1);

INSERT INTO ISSUES(ISSUELIST_ID, SUMMARY, DESCTRIPTION, USER_ID_ASSIGNEDTO) 
VALUES(3, "Task 4", "Create a table", 5);

INSERT INTO ISSUES(ISSUELIST_ID, SUMMARY, DESCTRIPTION, USER_ID_ASSIGNEDTO) 
VALUES(2, "Task 6", "Clean code", 3);

INSERT INTO ISSUES(ISSUELIST_ID, SUMMARY, DESCTRIPTION, USER_ID_ASSIGNEDTO) 
VALUES(2, "Task 3", "Check code", 2);

INSERT INTO ISSUES(ISSUELIST_ID, SUMMARY, DESCTRIPTION, USER_ID_ASSIGNEDTO) 
VALUES(3, "Task 5", "Get paid", 4);

COMMIT;
